{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios';\nexport const createPost = createAsyncThunk('post/createPost', async (post, {\n  rejectWithValue\n}) => {\n  try {\n    const response = await axios.post('/api/posts', post);\n    return response.data;\n  } catch (error) {\n    return rejectWithValue(error.response.data);\n  }\n});\nconst postSlice = createSlice({\n  name: 'post',\n  initialState: {\n    post: null,\n    status: 'idle',\n    error: null\n  },\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(createPost.pending, state => {\n      state.status = 'loading';\n    }).addCase(createPost.fulfilled, (state, action) => {\n      state.status = 'succeeded';\n      state.post = action.payload;\n    }).addCase(createPost.rejected, (state, action) => {\n      state.status = 'failed';\n      state.error = action.payload;\n    });\n  }\n});\nexport default postSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","createPost","post","rejectWithValue","response","data","error","postSlice","name","initialState","status","reducers","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","rejected","reducer"],"sources":["/home/dark47/Desktop/ABC-APP/client/src/redux/postSlice.jsx"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios';\n\nexport const createPost = createAsyncThunk(\n  'post/createPost',\n  async (post, { rejectWithValue }) => {\n    try {\n      const response = await axios.post('/api/posts', post);\n      return response.data;\n    } catch (error) {\n      return rejectWithValue(error.response.data);\n    }\n  }\n);\n\nconst postSlice = createSlice({\n  name: 'post',\n  initialState: {\n    post: null,\n    status: 'idle',\n    error: null,\n  },\n  reducers: {},\n  extraReducers: (builder) => {\n    builder\n      .addCase(createPost.pending, (state) => {\n        state.status = 'loading';\n      })\n      .addCase(createPost.fulfilled, (state, action) => {\n        state.status = 'succeeded';\n        state.post = action.payload;\n      })\n      .addCase(createPost.rejected, (state, action) => {\n        state.status = 'failed';\n        state.error = action.payload;\n      });\n  },\n});\n\nexport default postSlice.reducer;\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAChE,OAAOC,KAAK,MAAM,OAAO;AAEzB,OAAO,MAAMC,UAAU,GAAGF,gBAAgB,CACxC,iBAAiB,EACjB,OAAOG,IAAI,EAAE;EAAEC;AAAgB,CAAC,KAAK;EACnC,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMJ,KAAK,CAACE,IAAI,CAAC,YAAY,EAAEA,IAAI,CAAC;IACrD,OAAOE,QAAQ,CAACC,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd,OAAOH,eAAe,CAACG,KAAK,CAACF,QAAQ,CAACC,IAAI,CAAC;EAC7C;AACF,CACF,CAAC;AAED,MAAME,SAAS,GAAGT,WAAW,CAAC;EAC5BU,IAAI,EAAE,MAAM;EACZC,YAAY,EAAE;IACZP,IAAI,EAAE,IAAI;IACVQ,MAAM,EAAE,MAAM;IACdJ,KAAK,EAAE;EACT,CAAC;EACDK,QAAQ,EAAE,CAAC,CAAC;EACZC,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CACJC,OAAO,CAACb,UAAU,CAACc,OAAO,EAAGC,KAAK,IAAK;MACtCA,KAAK,CAACN,MAAM,GAAG,SAAS;IAC1B,CAAC,CAAC,CACDI,OAAO,CAACb,UAAU,CAACgB,SAAS,EAAE,CAACD,KAAK,EAAEE,MAAM,KAAK;MAChDF,KAAK,CAACN,MAAM,GAAG,WAAW;MAC1BM,KAAK,CAACd,IAAI,GAAGgB,MAAM,CAACC,OAAO;IAC7B,CAAC,CAAC,CACDL,OAAO,CAACb,UAAU,CAACmB,QAAQ,EAAE,CAACJ,KAAK,EAAEE,MAAM,KAAK;MAC/CF,KAAK,CAACN,MAAM,GAAG,QAAQ;MACvBM,KAAK,CAACV,KAAK,GAAGY,MAAM,CAACC,OAAO;IAC9B,CAAC,CAAC;EACN;AACF,CAAC,CAAC;AAEF,eAAeZ,SAAS,CAACc,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}