{"ast":null,"code":"var _jsxFileName = \"/home/dark47/Desktop/ABC-APP/client/src/pages/Contexts/AuthContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from 'react';\nimport axios from 'axios';\n\n// Cria o contexto\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\n\n// Componente Provedor de Contexto\nconst AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [token, setToken] = useState(null);\n  const [userType, setUserType] = useState(null); // Adiciona o estado para o tipo de usuário\n\n  // Função para logar o usuário\n  const login = async (email, password) => {\n    try {\n      const response = await axios.post('/login', {\n        Email: email,\n        Senha: password\n      });\n      setToken(response.data.token);\n      localStorage.setItem('token', response.data.token);\n      setUser(response.data.user); // Assumindo que a API retorna o usuário\n      console.log(response.data);\n      setUserType(response.data.user.tipo); // Define o tipo de usuário\n    } catch (error) {\n      console.error('Erro ao logar:', error);\n      // Tratar o erro (por exemplo, exibir uma mensagem de erro)\n    }\n  };\n\n  // Função para sair da conta\n  const logout = () => {\n    setToken(null);\n    setUser(null);\n    setUserType(null); // Limpa o tipo de usuário\n    localStorage.removeItem('token');\n  };\n\n  // Obter as informações do usuário logado\n  const getUser = () => {\n    return user;\n  };\n\n  // Verificar se o usuário está logado quando o componente é montado\n  useEffect(() => {\n    const storedToken = localStorage.getItem('token');\n    if (storedToken) {\n      setToken(storedToken);\n      // Fazer uma requisição para obter as informações do usuário (verifique sua API)\n      // ...\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      token,\n      userType,\n      login,\n      logout,\n      getUser\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"zOk5iWeMrLdPPTKuGZJXJnwzmYQ=\");\n_c = AuthProvider;\nexport { AuthContext, AuthProvider };\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","axios","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","token","setToken","userType","setUserType","login","email","password","response","post","Email","Senha","data","localStorage","setItem","console","log","tipo","error","logout","removeItem","getUser","storedToken","getItem","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/dark47/Desktop/ABC-APP/client/src/pages/Contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\nimport axios from 'axios';\n\n// Cria o contexto\nconst AuthContext = createContext();\n\n// Componente Provedor de Contexto\nconst AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n  const [token, setToken] = useState(null);\n  const [userType, setUserType] = useState(null); // Adiciona o estado para o tipo de usuário\n\n  // Função para logar o usuário\n  const login = async (email, password) => {\n    try {\n      const response = await axios.post('/login', { Email: email, Senha: password });\n      setToken(response.data.token);\n      localStorage.setItem('token', response.data.token);\n      setUser(response.data.user); // Assumindo que a API retorna o usuário\n      console.log(response.data)\n      setUserType(response.data.user.tipo); // Define o tipo de usuário\n    } catch (error) {\n      console.error('Erro ao logar:', error);\n      // Tratar o erro (por exemplo, exibir uma mensagem de erro)\n    }\n  };\n\n  // Função para sair da conta\n  const logout = () => {\n    setToken(null);\n    setUser(null);\n    setUserType(null); // Limpa o tipo de usuário\n    localStorage.removeItem('token');\n  };\n\n  // Obter as informações do usuário logado\n  const getUser = () => {\n    return user;\n  };\n\n  // Verificar se o usuário está logado quando o componente é montado\n  useEffect(() => {\n    const storedToken = localStorage.getItem('token');\n    if (storedToken) {\n      setToken(storedToken);\n      // Fazer uma requisição para obter as informações do usuário (verifique sua API)\n      // ...\n    }\n  }, []);\n\n  return (\n    <AuthContext.Provider value={{ user, token, userType, login, logout, getUser }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport { AuthContext, AuthProvider };"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AACjE,OAAOC,KAAK,MAAM,OAAO;;AAEzB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,WAAW,gBAAGN,aAAa,CAAC,CAAC;;AAEnC;AACA,MAAMO,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACrC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACa,QAAQ,EAAEC,WAAW,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;;EAEhD;EACA,MAAMe,KAAK,GAAG,MAAAA,CAAOC,KAAK,EAAEC,QAAQ,KAAK;IACvC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMhB,KAAK,CAACiB,IAAI,CAAC,QAAQ,EAAE;QAAEC,KAAK,EAAEJ,KAAK;QAAEK,KAAK,EAAEJ;MAAS,CAAC,CAAC;MAC9EL,QAAQ,CAACM,QAAQ,CAACI,IAAI,CAACX,KAAK,CAAC;MAC7BY,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEN,QAAQ,CAACI,IAAI,CAACX,KAAK,CAAC;MAClDD,OAAO,CAACQ,QAAQ,CAACI,IAAI,CAACb,IAAI,CAAC,CAAC,CAAC;MAC7BgB,OAAO,CAACC,GAAG,CAACR,QAAQ,CAACI,IAAI,CAAC;MAC1BR,WAAW,CAACI,QAAQ,CAACI,IAAI,CAACb,IAAI,CAACkB,IAAI,CAAC,CAAC,CAAC;IACxC,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdH,OAAO,CAACG,KAAK,CAAC,gBAAgB,EAAEA,KAAK,CAAC;MACtC;IACF;EACF,CAAC;;EAED;EACA,MAAMC,MAAM,GAAGA,CAAA,KAAM;IACnBjB,QAAQ,CAAC,IAAI,CAAC;IACdF,OAAO,CAAC,IAAI,CAAC;IACbI,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC;IACnBS,YAAY,CAACO,UAAU,CAAC,OAAO,CAAC;EAClC,CAAC;;EAED;EACA,MAAMC,OAAO,GAAGA,CAAA,KAAM;IACpB,OAAOtB,IAAI;EACb,CAAC;;EAED;EACAR,SAAS,CAAC,MAAM;IACd,MAAM+B,WAAW,GAAGT,YAAY,CAACU,OAAO,CAAC,OAAO,CAAC;IACjD,IAAID,WAAW,EAAE;MACfpB,QAAQ,CAACoB,WAAW,CAAC;MACrB;MACA;IACF;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,oBACE5B,OAAA,CAACC,WAAW,CAAC6B,QAAQ;IAACC,KAAK,EAAE;MAAE1B,IAAI;MAAEE,KAAK;MAAEE,QAAQ;MAAEE,KAAK;MAAEc,MAAM;MAAEE;IAAQ,CAAE;IAAAxB,QAAA,EAC5EA;EAAQ;IAAA6B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAAC/B,EAAA,CAhDIF,YAAY;AAAAkC,EAAA,GAAZlC,YAAY;AAkDlB,SAASD,WAAW,EAAEC,YAAY;AAAG,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}