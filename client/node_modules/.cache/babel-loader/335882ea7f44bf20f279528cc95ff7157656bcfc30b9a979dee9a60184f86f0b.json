{"ast":null,"code":"var _jsxFileName = \"/home/dark47/Desktop/ABC-APP/client/src/context/AuthContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\n// Cria o contexto\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\n\n// Componente Provedor de Contexto\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [token, setToken] = useState(null);\n  const [userType, setUserType] = useState(null); // Adiciona o estado para o tipo de usuário\n\n  // Função para logar o usuário\n  // AuthContext.js\n  const login = async (email, password) => {\n    try {\n      const response = await axios.post(\"http://localhost:3001/login\", {\n        Email: email,\n        Senha: password\n      });\n      setToken(response.data.token);\n      localStorage.setItem(\"token\", response.data.token);\n      if (response.data.user && response.data.user.tipo) {\n        // Verifica se a propriedade existe\n        setUser(response.data.user); // Assumindo que a API retorna o usuário\n        setUserType(response.data.user.tipo); // Define o tipo de usuário\n        console.log(\"user: \", response.data);\n        console.log(\"userType: \", response.data.user.tipo);\n      } else {\n        console.error('Propriedade \"tipo\" não encontrada na resposta da API');\n        // Tratar o erro (exibir uma mensagem de erro)\n      }\n    } catch (error) {\n      console.error(\"Erro ao logar:\", error);\n      // Tratar o erro (por exemplo, exibir uma mensagem de erro)\n    }\n  };\n\n  // Função para sair da conta\n  const logout = () => {\n    setToken(null);\n    setUser(null);\n    setUserType(null); // Limpa o tipo de usuário\n    localStorage.removeItem(\"token\");\n  };\n\n  // Obter as informações do usuário logado\n  const getUser = () => {\n    return user;\n  };\n\n  // Verificar se o usuário está logado quando o componente é montado\n  useEffect(() => {\n    const storedToken = localStorage.getItem(\"token\");\n    if (storedToken) {\n      setToken(storedToken);\n      // Fazer uma requisição para obter as informações do usuário (verifique sua API)\n      axios.get(`http://localhost:3001/usuarios/`, {\n        headers: {\n          Authorization: `Bearer ${storedToken}`\n        }\n      }).then(response => {\n        var _response$data;\n        setUser(response === null || response === void 0 ? void 0 : response.data);\n        setUserType(response === null || response === void 0 ? void 0 : (_response$data = response.data) === null || _response$data === void 0 ? void 0 : _response$data.tipo);\n        console.log(response);\n      }).catch(error => {\n        // Tratar o erro caso a requisição falhe\n        console.error(\"Erro ao obter informações do usuário:\", error);\n      });\n    }\n  }, [user]);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      token,\n      userType,\n      login,\n      logout,\n      getUser\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"zOk5iWeMrLdPPTKuGZJXJnwzmYQ=\");\n_c = AuthProvider;\nexport { AuthContext };\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","axios","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","token","setToken","userType","setUserType","login","email","password","response","post","Email","Senha","data","localStorage","setItem","tipo","console","log","error","logout","removeItem","getUser","storedToken","getItem","get","headers","Authorization","then","_response$data","catch","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/dark47/Desktop/ABC-APP/client/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\n// Cria o contexto\nconst AuthContext = createContext();\n\n// Componente Provedor de Contexto\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n  const [token, setToken] = useState(null);\n  const [userType, setUserType] = useState(null); // Adiciona o estado para o tipo de usuário\n\n  // Função para logar o usuário\n  // AuthContext.js\nconst login = async (email, password) => {\n  try {\n    const response = await axios.post(\"http://localhost:3001/login\", {\n      Email: email,\n      Senha: password,\n    });\n    setToken(response.data.token);\n    localStorage.setItem(\"token\", response.data.token);\n\n    if (response.data.user && response.data.user.tipo) { // Verifica se a propriedade existe\n      setUser(response.data.user); // Assumindo que a API retorna o usuário\n      setUserType(response.data.user.tipo); // Define o tipo de usuário\n      console.log(\"user: \", response.data);\n      console.log(\"userType: \", response.data.user.tipo);\n    } else {\n      console.error('Propriedade \"tipo\" não encontrada na resposta da API'); \n      // Tratar o erro (exibir uma mensagem de erro)\n    }\n  } catch (error) {\n    console.error(\"Erro ao logar:\", error);\n    // Tratar o erro (por exemplo, exibir uma mensagem de erro)\n  }\n};\n\n  // Função para sair da conta\n  const logout = () => {\n    setToken(null);\n    setUser(null);\n    setUserType(null); // Limpa o tipo de usuário\n    localStorage.removeItem(\"token\");\n  };\n\n  // Obter as informações do usuário logado\n  const getUser = () => {\n    return user;\n  };\n\n  // Verificar se o usuário está logado quando o componente é montado\n  useEffect(() => {\n    const storedToken = localStorage.getItem(\"token\");\n    if (storedToken) {\n      setToken(storedToken);\n      // Fazer uma requisição para obter as informações do usuário (verifique sua API)\n      axios\n        .get(`http://localhost:3001/usuarios/`, {\n          headers: {\n            Authorization: `Bearer ${storedToken}`,\n          },\n        })\n        .then((response) => {\n          setUser(response?.data);\n          setUserType(response?.data?.tipo);\n          console.log(response)\n        })\n        .catch((error) => {\n          // Tratar o erro caso a requisição falhe\n          console.error(\"Erro ao obter informações do usuário:\", error);\n        });\n    }\n  }, [user]);\n\n  return (\n    <AuthContext.Provider\n      value={{ user, token, userType, login, logout, getUser }}\n    >\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport { AuthContext };"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}