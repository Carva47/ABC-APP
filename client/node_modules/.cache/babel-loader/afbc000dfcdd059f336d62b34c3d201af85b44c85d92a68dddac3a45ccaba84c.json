{"ast":null,"code":"var _jsxFileName = \"/home/dark47/Desktop/ABC-APP/client/src/pages/UserPage/Feed.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Postagem from '../Postagem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Feed() {\n  _s();\n  const [postagens, setPostagens] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch('http://localhost:3001/postagens');\n        const data = await response.json();\n        setPostagens(data);\n      } catch (error) {\n        console.error('Erro ao obter as postagens:', error);\n      }\n    };\n    fetchData();\n  }, []); // Faz a requisição apenas uma vez quando o componente é montado\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"feed\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Feed de Not\\xEDcias\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), postagens.map(postagem => /*#__PURE__*/_jsxDEV(Postagem, {\n      postagem: postagem\n    }, postagem.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n_s(Feed, \"CMOsNNbak9ERoQyRdcph0oRKwKI=\");\n_c = Feed;\nexport default Feed;\nvar _c;\n$RefreshReg$(_c, \"Feed\");","map":{"version":3,"names":["React","useState","useEffect","Postagem","jsxDEV","_jsxDEV","Feed","_s","postagens","setPostagens","fetchData","response","fetch","data","json","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","postagem","id","_c","$RefreshReg$"],"sources":["/home/dark47/Desktop/ABC-APP/client/src/pages/UserPage/Feed.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Postagem from '../Postagem'; \n\nfunction Feed() {\n  const [postagens, setPostagens] = useState([]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch('http://localhost:3001/postagens');\n        const data = await response.json();\n        setPostagens(data);\n      } catch (error) {\n        console.error('Erro ao obter as postagens:', error);\n      }\n    };\n\n    fetchData();\n  }, []); // Faz a requisição apenas uma vez quando o componente é montado\n\n  return (\n    <div className=\"feed\">\n      <h1>Feed de Notícias</h1>\n      {postagens.map((postagem) => (\n        <Postagem key={postagem.id} postagem={postagem} />\n      ))}\n    </div>\n  );\n}\n\nexport default Feed;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,QAAQ,MAAM,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnC,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EACd,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAE9CC,SAAS,CAAC,MAAM;IACd,MAAMQ,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,iCAAiC,CAAC;QAC/D,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;QAClCL,YAAY,CAACI,IAAI,CAAC;MACpB,CAAC,CAAC,OAAOE,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;MACrD;IACF,CAAC;IAEDL,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,oBACEL,OAAA;IAAKY,SAAS,EAAC,MAAM;IAAAC,QAAA,gBACnBb,OAAA;MAAAa,QAAA,EAAI;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACxBd,SAAS,CAACe,GAAG,CAAEC,QAAQ,iBACtBnB,OAAA,CAACF,QAAQ;MAAmBqB,QAAQ,EAAEA;IAAS,GAAhCA,QAAQ,CAACC,EAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAuB,CAClD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAACf,EAAA,CAzBQD,IAAI;AAAAoB,EAAA,GAAJpB,IAAI;AA2Bb,eAAeA,IAAI;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}