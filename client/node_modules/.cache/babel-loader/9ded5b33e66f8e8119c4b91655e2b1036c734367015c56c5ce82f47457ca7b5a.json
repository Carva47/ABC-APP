{"ast":null,"code":"var _jsxFileName = \"/home/dark47/Desktop/ABC-APP/client/src/pages/UserPage/Feed.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport MainPost from '../../components/MainPost/MainPost'; // Importe o componente MainPost\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Feed() {\n  _s();\n  const [postagens, setPostagens] = useState([]);\n  useEffect(() => {\n    const fetchPostagens = async () => {\n      try {\n        // Substitua 'http://localhost:3001/postagens' pelo endpoint da sua API\n        const response = await fetch('http://localhost:3001/postagens');\n        const data = await response.json();\n        setPostagens(data);\n      } catch (error) {\n        console.error('Erro ao obter as postagens:', error);\n      }\n    };\n    fetchPostagens();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"feed\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Feed de Not\\xEDcias\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), postagens.map(postagem => /*#__PURE__*/_jsxDEV(MainPost, {\n      postagem: postagem\n    }, postagem.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n}\n_s(Feed, \"CMOsNNbak9ERoQyRdcph0oRKwKI=\");\n_c = Feed;\nexport default Feed;\nvar _c;\n$RefreshReg$(_c, \"Feed\");","map":{"version":3,"names":["React","useEffect","useState","MainPost","jsxDEV","_jsxDEV","Feed","_s","postagens","setPostagens","fetchPostagens","response","fetch","data","json","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","postagem","id","_c","$RefreshReg$"],"sources":["/home/dark47/Desktop/ABC-APP/client/src/pages/UserPage/Feed.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport MainPost from '../../components/MainPost/MainPost'; // Importe o componente MainPost\n\nexport function Feed() {\n    const [postagens, setPostagens] = useState([]);\n\n    useEffect(() => {\n        const fetchPostagens = async () => {\n            try {\n                // Substitua 'http://localhost:3001/postagens' pelo endpoint da sua API\n                const response = await fetch('http://localhost:3001/postagens');\n                const data = await response.json();\n                setPostagens(data);\n            } catch (error) {\n                console.error('Erro ao obter as postagens:', error);\n            }\n        };\n\n        fetchPostagens();\n    }, []);\n\n    return (\n        <div className=\"feed\">\n            <h1>Feed de Not√≠cias</h1>\n            {postagens.map((postagem) => (\n                <MainPost key={postagem.id} postagem={postagem} />\n            ))}\n        </div>\n    );\n}\n\nexport default Feed;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,QAAQ,MAAM,oCAAoC,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE3D,OAAO,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EACnB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAE9CD,SAAS,CAAC,MAAM;IACZ,MAAMS,cAAc,GAAG,MAAAA,CAAA,KAAY;MAC/B,IAAI;QACA;QACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,iCAAiC,CAAC;QAC/D,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;QAClCL,YAAY,CAACI,IAAI,CAAC;MACtB,CAAC,CAAC,OAAOE,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;MACvD;IACJ,CAAC;IAEDL,cAAc,CAAC,CAAC;EACpB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIL,OAAA;IAAKY,SAAS,EAAC,MAAM;IAAAC,QAAA,gBACjBb,OAAA;MAAAa,QAAA,EAAI;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACxBd,SAAS,CAACe,GAAG,CAAEC,QAAQ,iBACpBnB,OAAA,CAACF,QAAQ;MAAmBqB,QAAQ,EAAEA;IAAS,GAAhCA,QAAQ,CAACC,EAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAuB,CACpD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEd;AAACf,EAAA,CA1BeD,IAAI;AAAAoB,EAAA,GAAJpB,IAAI;AA4BpB,eAAeA,IAAI;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}