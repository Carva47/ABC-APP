{"ast":null,"code":"var _jsxFileName = \"/home/dark47/Desktop/ABC-APP/client/src/context/AuthContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\n// Cria o contexto\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\n\n// Componente Provedor de Contexto\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [token, setToken] = useState(null);\n  const [userType, setUserType] = useState(null);\n  const [error, setError] = useState(null);\n\n  // Função para logar o usuário\n  const login = async (email, password) => {\n    try {\n      const response = await axios.post(\"http://localhost:3001/login\", {\n        Email: email,\n        Senha: password\n      });\n      if (response.status === 200) {\n        setToken(response.data.token);\n        localStorage.setItem(\"token\", response.data.token);\n        if (response.data.user && response.data.user.tipo) {\n          setUser(response.data.user);\n          setUserType(response.data.user.tipo);\n          setError(null);\n          console.log(\"user: \", response.data);\n          console.log(\"userType: \", response.data.user.tipo);\n        } else {\n          console.error('Propriedade \"tipo\" não encontrada na resposta da API');\n          setError('Credenciais inválidas');\n        }\n      } else {\n        setError(response.data.error || 'Credenciais inválidas');\n      }\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error(\"Erro ao logar:\", error);\n      setError(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || 'Erro ao fazer login. Tente novamente mais tarde.');\n      // Atualiza a página\n      window.location.reload(); // Atualiza a página completamente\n    }\n  };\n\n  // Função para sair da conta\n  const logout = () => {\n    setToken(null);\n    setUser(null);\n    setUserType(null); // Limpa o tipo de usuário\n    localStorage.removeItem(\"token\");\n  };\n\n  // Obter as informações do usuário logado\n  const getUser = () => {\n    return user;\n  };\n\n  // Verificar se o usuário está logado quando o componente é montado\n  useEffect(() => {\n    const storedToken = localStorage.getItem(\"token\");\n    if (storedToken) {\n      setToken(storedToken);\n      // Fazer uma requisição para obter as informações do usuário (verifique sua API)\n      axios.get(`http://localhost:3001/usuarios/`, {\n        headers: {\n          Authorization: `Bearer ${storedToken}`\n        }\n      }).then(response => {\n        var _response$data;\n        setUser(response === null || response === void 0 ? void 0 : response.data);\n        setUserType(response === null || response === void 0 ? void 0 : (_response$data = response.data) === null || _response$data === void 0 ? void 0 : _response$data.tipo);\n      }).catch(error => {\n        // Tratar o erro caso a requisição falhe\n        console.error(\"Erro ao obter informações do usuário:\", error);\n      });\n    }\n  }, [user]);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      token,\n      userType,\n      login,\n      logout,\n      getUser\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"Y5qvmKxB5hu1B9NVV5CPlyYoE+I=\");\n_c = AuthProvider;\nexport { AuthContext };\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","axios","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","token","setToken","userType","setUserType","error","setError","login","email","password","response","post","Email","Senha","status","data","localStorage","setItem","tipo","console","log","_error$response","_error$response$data","window","location","reload","logout","removeItem","getUser","storedToken","getItem","get","headers","Authorization","then","_response$data","catch","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/dark47/Desktop/ABC-APP/client/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\n// Cria o contexto\nconst AuthContext = createContext();\n\n\n// Componente Provedor de Contexto\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n  const [token, setToken] = useState(null);\n  const [userType, setUserType] = useState(null); \n  const [error, setError] = useState(null); \n\n  // Função para logar o usuário\n  const login = async (email, password) => {\n    try {\n      const response = await axios.post(\"http://localhost:3001/login\", {\n        Email: email,\n        Senha: password,\n      });\n\n      if (response.status === 200) { \n        setToken(response.data.token);\n        localStorage.setItem(\"token\", response.data.token);\n\n        if (response.data.user && response.data.user.tipo) { \n          setUser(response.data.user); \n          setUserType(response.data.user.tipo); \n          setError(null); \n          console.log(\"user: \", response.data);\n          console.log(\"userType: \", response.data.user.tipo);\n        } else {\n          console.error('Propriedade \"tipo\" não encontrada na resposta da API'); \n          setError('Credenciais inválidas'); \n        }\n      } else {\n        setError(response.data.error || 'Credenciais inválidas'); \n      }\n\n    } catch (error) {\n      console.error(\"Erro ao logar:\", error);\n      setError(error.response?.data?.error || 'Erro ao fazer login. Tente novamente mais tarde.');\n      // Atualiza a página\n      window.location.reload(); // Atualiza a página completamente\n    }\n  };\n\n  // Função para sair da conta\n  const logout = () => {\n    setToken(null);\n    setUser(null);\n    setUserType(null); // Limpa o tipo de usuário\n    localStorage.removeItem(\"token\");\n  };\n\n  // Obter as informações do usuário logado\n  const getUser = () => {\n    return user;\n  };\n\n  // Verificar se o usuário está logado quando o componente é montado\n  useEffect(() => {\n    const storedToken = localStorage.getItem(\"token\");\n    if (storedToken) {\n      setToken(storedToken);\n      // Fazer uma requisição para obter as informações do usuário (verifique sua API)\n      axios\n        .get(`http://localhost:3001/usuarios/`, {\n          headers: {\n            Authorization: `Bearer ${storedToken}`,\n          },\n        })\n        .then((response) => {\n          setUser(response?.data);\n          setUserType(response?.data?.tipo);\n          \n        })\n        .catch((error) => {\n          // Tratar o erro caso a requisição falhe\n          console.error(\"Erro ao obter informações do usuário:\", error);\n        });\n    }\n  }, [user]);\n\n  return (\n    <AuthContext.Provider\n      value={{ user, token, userType, login, logout, getUser }}\n    >\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport { AuthContext };"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}